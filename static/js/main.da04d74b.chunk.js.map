{"version":3,"sources":["components/Task/NewTask.module.css","components/Tab.module.css","components/Task/NewTask.js","components/Task/TaskItem.js","components/Task/TaskBlock.js","components/Tab.js","App.js","index.js","components/Task/TaskBlock.module.css","components/Task/TaskItem.module.css"],"names":["module","exports","NewTask","props","taskRef","useRef","className","classes","onSubmit","event","preventDefault","current","value","trim","addTask","id","Math","random","state","text","type","ref","TaskItem","styleClasses","checked","onClick","onChangeState","checkbox","stopPropagation","onDelete","TaskBlock","filteredNum","selectedTabTasks","taskList","onAdd","onToggle","onDeleteDone","tasks","isShown","onShowNew","onCloseNew","tabTitleColor","todo","title","filter","task","done","all","length","map","backdrop","actions","Tab","useState","clickedTab","setClickedTab","todoClasses","active","doneClasses","allClasses","todoNum","item","doneNum","allNum","tab","onTab","icon","total","App","setTasks","setIsShown","filteredTitle","setFilteredTitle","useEffect","storedTasks","JSON","parse","localStorage","getItem","setItem","stringify","obj","taskObj","prevTasks","updatedTasks","updateObj","clickItemIndex","findIndex","clickItem","updatedTask","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da04d74b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-task\":\"NewTask_new-task__1zOti\",\"showing-top-to-buttom\":\"NewTask_showing-top-to-buttom__29Rku\",\"text\":\"NewTask_text__3B-BA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"Tab_tab__3W73d\",\"small-text\":\"Tab_small-text__3GWBX\",\"tab-item\":\"Tab_tab-item__XoTbl\",\"active\":\"Tab_active__3IKp7\",\"total\":\"Tab_total__2Y77j\",\"icon\":\"Tab_icon___vjHK\"};","import { useRef } from 'react';\nimport classes from './NewTask.module.css';\n\nconst NewTask = (props) => {\n  const taskRef = useRef();\n  const inputValueHandler = (event) => {\n\n    event.preventDefault();\n    if(taskRef.current.value.trim()===''){\n      return;\n    }\n    props.addTask({\n      id: Math.random(),\n      value: taskRef.current.value,\n      state: false\n    })\n    taskRef.current.value = '';\n  };\n  return (\n    <form className={classes['new-task']} onSubmit={inputValueHandler}  >\n      <input className={classes.text} type=\"text\" ref={taskRef}  />\n      <button type='submit' >+</button>\n    </form>\n  );\n};\n\nexport default NewTask;\n","import {RiDeleteBinLine} from 'react-icons/ri';\nimport classes from './TaskItem.module.css';\n\nconst TaskItem = (props) => {\n\n  const stateChangeHandler = (event) => {\n    props.onChangeState({\n      id: props.id,\n      value: props.value,\n      state: !props.state,\n    });\n  };\n  const deleteTaskHandler = (event)=>{\n    event.stopPropagation();\n    props.onDelete(props.id);\n  };\n  const styleClasses = `${classes['task']} ${props.state? classes.checked : ''}`\n  return (\n    <li key={props.id} className={styleClasses} onClick={stateChangeHandler}>\n      <span className={classes.checkbox} />\n      <div className={classes.text}>{props.value}</div>\n      <span onClick={deleteTaskHandler}><RiDeleteBinLine /></span>\n    </li>\n  );\n};\n\nexport default TaskItem;\n","import classes from './TaskBlock.module.css';\nimport NewTask from './NewTask';\nimport TaskItem from './TaskItem';\n\nconst TaskBlock = (props) => {\n  const {\n    onAdd,\n    onDelete,\n    onToggle,\n    onDeleteDone,\n    tasks,\n    isShown,\n    onShowNew,\n    onCloseNew,\n  } = props;\n\n  \n  let filteredNum = 0;\n  let tabTitleColor = classes.todo;\n  let selectedTabTasks;\n  if (props.title === '已完成') {\n    selectedTabTasks = tasks.filter((task) => task.state === true);\n    tabTitleColor = classes.done;\n  }\n  if (props.title === '未完成') {\n    selectedTabTasks = tasks.filter((task) => !task.state);\n    tabTitleColor = classes.todo;\n  }\n\n  if (props.title === '全部') {\n    selectedTabTasks = tasks;\n    tabTitleColor = classes.all;\n  }\n  filteredNum = selectedTabTasks.length;\n  let taskList;\n  if(filteredNum > 0 ){\n    taskList = (\n      <ul>\n        {selectedTabTasks.map((task) => (\n          <TaskItem\n            id={task.id}\n            key={task.id}\n            state={task.state}\n            value={task.value}\n            onDelete={onDelete}\n            onChangeState={onToggle}\n          />\n        ))}\n      </ul>\n    );\n    \n  }else{\n    taskList = <p>沒有提醒事項</p>;\n  }\n  \n  return (\n    <div className={classes['tab-block']}>\n      <div className={classes.backdrop} onClick={onCloseNew}></div>\n      <div className={`${classes['tab-title']} ${tabTitleColor}`}>\n        <h2>{props.title}</h2>\n        <h2>{filteredNum}</h2>\n      </div>\n      {taskList}\n      {isShown && <NewTask addTask={onAdd} onCloseNew={onCloseNew} />}\n      <div className={classes.actions}>\n        <button className={classes['clean-done']} onClick={onDeleteDone}>\n          清除已完成項目\n        </button>\n        <button className={classes['button-add']} onClick={onShowNew}>\n          +\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskBlock;\n","import {MdDateRange} from 'react-icons/md';\nimport {BiCalendarCheck} from 'react-icons/bi';\nimport {FaRegListAlt} from 'react-icons/fa';\nimport { useState } from 'react';\nimport classes from './Tab.module.css';\n\nconst Tab = (props) => {\n  const [clickedTab, setClickedTab] = useState({\n    todo: true,\n    done: false,\n    all: false,\n  });\n  const todoTaskHandler = () => {\n    props.onTab({\n      title: '未完成',\n    });\n    setClickedTab({\n      todo: true,\n      done: false,\n      all: false,\n    });\n  };\n  const doneTaskHandler = () => {\n    props.onTab({\n      title: '已完成',\n    });\n    setClickedTab({\n      todo: false,\n      done: true,\n      all: false,\n    });\n  };\n  const allTaskHandler = () => {\n    props.onTab({\n      title: '全部',\n    });\n    setClickedTab({\n      todo: false,\n      done: false,\n      all: true,\n    });\n  };\n  const todoClasses = `${classes['tab-item']} ${clickedTab.todo ? classes.active : ''}`\n  const doneClasses = `${classes['tab-item']} ${clickedTab.done ? classes.active : ''}`\n  const allClasses = `${classes['tab-item']} ${clickedTab.all ? classes.active : ''}`\n  \n  const todoNum = props.tasks.filter(item=>!item.state).length;\n  const doneNum = props.tasks.filter(item=>item.state).length;\n  const allNum = props.tasks.length;\n\n  return (\n    <div className={classes.tab}>\n      <h3 className={classes['small-text']}>代辦事項</h3>\n      <ul>\n        <li className={todoClasses} onClick={todoTaskHandler}>\n          <span className={classes.icon}><MdDateRange/></span>\n          <p>未完成</p>\n          <p className={classes.total}>{todoNum}</p>\n        </li>\n        <li className={doneClasses} onClick={doneTaskHandler}>\n          <span className={classes.icon}><BiCalendarCheck/></span>\n          <p>已完成</p>\n          <p className={classes.total}>{doneNum}</p>\n        </li>\n        <li className={allClasses} onClick={allTaskHandler}>\n          <span className={classes.icon}><FaRegListAlt/></span>\n          <p>全部</p>\n          <p className={classes.total}>{allNum}</p>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Tab;\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport TaskBlock from './components/Task/TaskBlock';\nimport Tab from './components/Tab';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [isShown, setIsShown] = useState(false);\n\n  const [filteredTitle, setFilteredTitle] = useState('未完成');\n  const captureTasksHandler = (obj) => {\n    setFilteredTitle(obj.title);\n  };\n\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('TASKS'));\n    setTasks(storedTasks);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('TASKS', JSON.stringify(tasks));\n  }, [tasks]);\n\n  const addTaskHandler = (taskObj) => {\n    setTasks((prevTasks) => [taskObj, ...prevTasks]);\n    setIsShown(false);\n  };\n  const checkboxChangeHandler = (updateObj) => {\n    const clickItemIndex = tasks.findIndex((task) => task.id === updateObj.id);\n    const clickItem = tasks[clickItemIndex];\n\n    const updatedTask = { ...clickItem, state: updateObj.state };\n    let updatedTasks = [...tasks];\n    updatedTasks[clickItemIndex] = updatedTask;\n    setTasks(updatedTasks);\n  };\n\n  const deleteTaskHandler = (id) => {\n    const updatedTasks = tasks.filter((task) => task.id !== id);\n    setTasks(updatedTasks);\n  };\n  const deleteDoneTaskHandler = () => {\n    const updatedTasks = tasks.filter((task) => task.state === false);\n    setTasks(updatedTasks);\n  };\n  const showNewTaskHandler = (event) => {\n    event.stopPropagation();\n    setIsShown(true);\n  };\n  const closeNewTaskHandler = (event) => {\n    event.stopPropagation();\n    setIsShown(false);\n  };\n  return (\n    <div className=\"App\">\n      <Tab\n        onTab={captureTasksHandler}\n        tasks={tasks}\n      />\n      <TaskBlock\n        title={filteredTitle}\n        onAdd={addTaskHandler}\n        onDelete={deleteTaskHandler}\n        onToggle={checkboxChangeHandler}\n        onDeleteDone={deleteDoneTaskHandler}\n        tasks={tasks}\n        onShowNew={showNewTaskHandler}\n        onCloseNew={closeNewTaskHandler}\n        isShown={isShown}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab-block\":\"TaskBlock_tab-block__wil5y\",\"tab-title\":\"TaskBlock_tab-title__lj5qT\",\"todo\":\"TaskBlock_todo__18ckH\",\"done\":\"TaskBlock_done__1Mf3c\",\"all\":\"TaskBlock_all__2ioMU\",\"actions\":\"TaskBlock_actions__Umbxl\",\"button-add\":\"TaskBlock_button-add__31fkN\",\"clean-done\":\"TaskBlock_clean-done__1jMnB\",\"backdrop\":\"TaskBlock_backdrop__3Vwdl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"TaskItem_task__1Fg_H\",\"showing-top-to-buttom\":\"TaskItem_showing-top-to-buttom__34N_q\",\"checkbox\":\"TaskItem_checkbox__MpkKR\",\"checked\":\"TaskItem_checked__3deOR\",\"text\":\"TaskItem_text__1pXYc\"};"],"sourceRoot":""}