{"ast":null,"code":"import{useRef}from'react';import classes from'./NewTask.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NewTask=function NewTask(props){var taskRef=useRef();var inputValueHandler=function inputValueHandler(event){event.preventDefault();if(taskRef.current.value.trim()===''){return;}props.addTask({id:Math.random(),value:taskRef.current.value,state:false});taskRef.current.value='';};return/*#__PURE__*/_jsxs(\"form\",{className:classes['new-task'],onSubmit:inputValueHandler,children:[/*#__PURE__*/_jsx(\"input\",{className:classes.text,type:\"text\",ref:taskRef}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"+\"})]});};export default NewTask;","map":{"version":3,"sources":["/Users/mission/Documents/react-practice-to do list/src/components/Task/NewTask.js"],"names":["useRef","classes","NewTask","props","taskRef","inputValueHandler","event","preventDefault","current","value","trim","addTask","id","Math","random","state","text"],"mappings":"AAAA,OAASA,MAAT,KAAuB,OAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACzB,GAAMC,CAAAA,OAAO,CAAGJ,MAAM,EAAtB,CACA,GAAMK,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CAEnCA,KAAK,CAACC,cAAN,GACA,GAAGH,OAAO,CAACI,OAAR,CAAgBC,KAAhB,CAAsBC,IAAtB,KAA+B,EAAlC,CAAqC,CACnC,OACD,CACDP,KAAK,CAACQ,OAAN,CAAc,CACZC,EAAE,CAAEC,IAAI,CAACC,MAAL,EADQ,CAEZL,KAAK,CAAEL,OAAO,CAACI,OAAR,CAAgBC,KAFX,CAGZM,KAAK,CAAE,KAHK,CAAd,EAKAX,OAAO,CAACI,OAAR,CAAgBC,KAAhB,CAAwB,EAAxB,CACD,CAZD,CAaA,mBACE,cAAM,SAAS,CAAER,OAAO,CAAC,UAAD,CAAxB,CAAsC,QAAQ,CAAEI,iBAAhD,wBACE,cAAO,SAAS,CAAEJ,OAAO,CAACe,IAA1B,CAAgC,IAAI,CAAC,MAArC,CAA4C,GAAG,CAAEZ,OAAjD,EADF,cAEE,eAAQ,IAAI,CAAC,QAAb,eAFF,GADF,CAMD,CArBD,CAuBA,cAAeF,CAAAA,OAAf","sourcesContent":["import { useRef } from 'react';\nimport classes from './NewTask.module.css';\n\nconst NewTask = (props) => {\n  const taskRef = useRef();\n  const inputValueHandler = (event) => {\n\n    event.preventDefault();\n    if(taskRef.current.value.trim()===''){\n      return;\n    }\n    props.addTask({\n      id: Math.random(),\n      value: taskRef.current.value,\n      state: false\n    })\n    taskRef.current.value = '';\n  };\n  return (\n    <form className={classes['new-task']} onSubmit={inputValueHandler}  >\n      <input className={classes.text} type=\"text\" ref={taskRef}  />\n      <button type='submit' >+</button>\n    </form>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}