{"ast":null,"code":"var _jsxFileName = \"/Users/mission/Documents/react-project-practice2/src/component/Task/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useContext } from 'react';\nimport TaskContext from '../../store/task-context';\nimport classes from './NewTask.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const taskCtx = useContext(TaskContext);\n  const taskRef = useRef();\n  const radioRef = useRef();\n\n  const inputValueHandler = event => {\n    if (taskRef.current.value.trim() === '') {\n      return;\n    }\n\n    taskCtx.addTask({\n      id: Math.random(),\n      value: taskRef.current.value,\n      state: radioRef.current.checked\n    });\n    taskRef.current.value = '';\n    radioRef.current.checked = false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes['new-task'],\n    onBlur: inputValueHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: classes.checkbox,\n      type: \"checkbox\",\n      ref: radioRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: classes.text,\n      type: \"text\",\n      ref: taskRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"RO4sno0Oe76ykSunqXuaf2Kzh70=\");\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/Users/mission/Documents/react-project-practice2/src/component/Task/NewTask.js"],"names":["useRef","useContext","TaskContext","classes","NewTask","props","taskCtx","taskRef","radioRef","inputValueHandler","event","current","value","trim","addTask","id","Math","random","state","checked","checkbox","text"],"mappings":";;;AAAA,SAASA,MAAT,EAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,OAAO,GAAGL,UAAU,CAACC,WAAD,CAA1B;AACA,QAAMK,OAAO,GAAGP,MAAM,EAAtB;AACA,QAAMQ,QAAQ,GAAGR,MAAM,EAAvB;;AACA,QAAMS,iBAAiB,GAAIC,KAAD,IAAW;AACnC,QAAGH,OAAO,CAACI,OAAR,CAAgBC,KAAhB,CAAsBC,IAAtB,OAA+B,EAAlC,EAAqC;AACnC;AACD;;AACDP,IAAAA,OAAO,CAACQ,OAAR,CAAgB;AACdC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADU;AAEdL,MAAAA,KAAK,EAAEL,OAAO,CAACI,OAAR,CAAgBC,KAFT;AAGdM,MAAAA,KAAK,EAAEV,QAAQ,CAACG,OAAT,CAAiBQ;AAHV,KAAhB;AAKAZ,IAAAA,OAAO,CAACI,OAAR,CAAgBC,KAAhB,GAAwB,EAAxB;AACAJ,IAAAA,QAAQ,CAACG,OAAT,CAAiBQ,OAAjB,GAA2B,KAA3B;AACD,GAXD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAAC,UAAD,CAAvB;AAAqC,IAAA,MAAM,EAAEM,iBAA7C;AAAA,4BACE;AAAO,MAAA,SAAS,EAAEN,OAAO,CAACiB,QAA1B;AAAoC,MAAA,IAAI,EAAC,UAAzC;AAAoD,MAAA,GAAG,EAAEZ;AAAzD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAEL,OAAO,CAACkB,IAA1B;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,GAAG,EAAEd;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAtBD;;GAAMH,O;;KAAAA,O;AAwBN,eAAeA,OAAf","sourcesContent":["import { useRef,useContext } from 'react';\nimport TaskContext from '../../store/task-context';\nimport classes from './NewTask.module.css';\n\nconst NewTask = (props) => {\n  const taskCtx = useContext(TaskContext);\n  const taskRef = useRef();\n  const radioRef = useRef();\n  const inputValueHandler = (event) => {\n    if(taskRef.current.value.trim()===''){\n      return;\n    }\n    taskCtx.addTask({\n      id: Math.random(),\n      value: taskRef.current.value,\n      state: radioRef.current.checked,\n    })\n    taskRef.current.value = '';\n    radioRef.current.checked = false;\n  };\n  return (\n    <div className={classes['new-task']} onBlur={inputValueHandler}>\n      <input className={classes.checkbox} type=\"checkbox\" ref={radioRef}/>\n      <input className={classes.text} type=\"text\" ref={taskRef}  />\n    </div>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}