{"ast":null,"code":"var _jsxFileName = \"/Users/mission/Documents/react-project-practice2/src/component/Task/TaskBlock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport NewTask from \"./NewTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskBlock = props => {\n  _s();\n\n  const [task, setTask] = useState([]);\n\n  const newTaskValueHandler = obj => {\n    const enteredTaskIndex = task.findIndex(item => item.id === obj.id);\n    let enteredTask = task[enteredTaskIndex];\n\n    if (enteredTask) {\n      const enteredTasks = [...task];\n      enteredTasks[enteredTaskIndex] = enteredTask;\n    } else {\n      setTask([...task, obj]);\n    }\n\n    console.log(task);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u672A\\u5B8C\\u6210\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NewTask, {\n      onTaskValue: newTaskValueHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n\n_s(TaskBlock, \"rgrguAE+TvsrG+fxdTyGAEH9vF0=\");\n\n_c = TaskBlock;\nexport default TaskBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBlock\");","map":{"version":3,"sources":["/Users/mission/Documents/react-project-practice2/src/component/Task/TaskBlock.js"],"names":["React","useState","NewTask","TaskBlock","props","task","setTask","newTaskValueHandler","obj","enteredTaskIndex","findIndex","item","id","enteredTask","enteredTasks","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AAEA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAS;AAAA;;AAEzB,QAAM,CAACC,IAAD,EAAQC,OAAR,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMM,mBAAmB,GAAIC,GAAD,IAAO;AACjC,UAAMC,gBAAgB,GAAGJ,IAAI,CAACK,SAAL,CAAeC,IAAI,IAAGA,IAAI,CAACC,EAAL,KAAYJ,GAAG,CAACI,EAAtC,CAAzB;AACA,QAAIC,WAAW,GAAGR,IAAI,CAACI,gBAAD,CAAtB;;AACA,QAAGI,WAAH,EAAe;AACb,YAAMC,YAAY,GAAG,CAAC,GAAGT,IAAJ,CAArB;AACAS,MAAAA,YAAY,CAACL,gBAAD,CAAZ,GAAiCI,WAAjC;AACD,KAHD,MAGK;AACHP,MAAAA,OAAO,CAAC,CACN,GAAGD,IADG,EACEG,GADF,CAAD,CAAP;AAGD;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACD,GAZD;;AAcA,sBAAO;AAAA,4BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,eAEL,QAAC,OAAD;AAAS,MAAA,WAAW,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD,CAtBD;;GAAMJ,S;;KAAAA,S;AAwBN,eAAeA,SAAf","sourcesContent":["import React, {useState } from 'react';\n\nimport NewTask from \"./NewTask\";\n\nconst TaskBlock = (props)=>{\n\n  const [task , setTask]= useState([])\n  const newTaskValueHandler = (obj)=>{\n    const enteredTaskIndex = task.findIndex(item=> item.id === obj.id);\n    let enteredTask = task[enteredTaskIndex]\n    if(enteredTask){\n      const enteredTasks = [...task]\n      enteredTasks[enteredTaskIndex] = enteredTask\n    }else{\n      setTask([\n        ...task,obj\n      ]);\n    }\n    console.log(task)\n  };\n\n  return <div>\n    <h2>未完成</h2>\n    <NewTask onTaskValue={newTaskValueHandler} />\n\n  </div>\n};\n\nexport default TaskBlock;"]},"metadata":{},"sourceType":"module"}