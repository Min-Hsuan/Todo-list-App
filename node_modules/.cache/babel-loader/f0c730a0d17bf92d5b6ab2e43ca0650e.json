{"ast":null,"code":"var _jsxFileName = \"/Users/mission/Documents/react-practice-to do list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport TaskBlock from './components/Task/TaskBlock';\nimport Tab from './components/Tab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [isShown, setIsShown] = useState(false);\n  const [filteredTitle, setFilteredTitle] = useState('未完成');\n\n  const captureTasksHandler = obj => {\n    setFilteredTitle(obj.title);\n  };\n\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('TASKS'));\n    setTasks(storedTasks);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('TASKS', JSON.stringify(tasks));\n  }, [tasks]);\n\n  const addTaskHandler = taskObj => {\n    setTasks(prevTasks => [taskObj, ...prevTasks]);\n    setIsShown(false);\n  };\n\n  const checkboxChangeHandler = updateObj => {\n    const clickItemIndex = tasks.findIndex(task => task.id === updateObj.id);\n    const clickItem = tasks[clickItemIndex];\n    const updatedTask = { ...clickItem,\n      state: updateObj.state\n    };\n    let updatedTasks = [...tasks];\n    updatedTasks[clickItemIndex] = updatedTask;\n    setTasks(updatedTasks);\n  };\n\n  const deleteTaskHandler = id => {\n    const updatedTasks = tasks.filter(task => task.id !== id);\n    setTasks(updatedTasks);\n  };\n\n  const deleteDoneTaskHandler = () => {\n    const updatedTasks = tasks.filter(task => task.state === false);\n    setTasks(updatedTasks);\n  };\n\n  const showNewTaskHandler = event => {\n    event.stopPropagation();\n    setIsShown(true);\n  };\n\n  const closeNewTaskHandler = event => {\n    event.stopPropagation();\n    setIsShown(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Tab, {\n      onTab: captureTasksHandler,\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskBlock, {\n      title: filteredTitle,\n      onAdd: addTaskHandler,\n      onDelete: deleteTaskHandler,\n      onToggle: checkboxChangeHandler,\n      onDeleteDone: deleteDoneTaskHandler,\n      tasks: tasks,\n      onShowNew: showNewTaskHandler,\n      onCloseNew: closeNewTaskHandler,\n      isShown: isShown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iGatFf7wj7lE5ohyj1LvXATm7Fw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mission/Documents/react-practice-to do list/src/App.js"],"names":["useState","useEffect","TaskBlock","Tab","App","tasks","setTasks","isShown","setIsShown","filteredTitle","setFilteredTitle","captureTasksHandler","obj","title","storedTasks","JSON","parse","localStorage","getItem","setItem","stringify","addTaskHandler","taskObj","prevTasks","checkboxChangeHandler","updateObj","clickItemIndex","findIndex","task","id","clickItem","updatedTask","state","updatedTasks","deleteTaskHandler","filter","deleteDoneTaskHandler","showNewTaskHandler","event","stopPropagation","closeNewTaskHandler"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport TaskBlock from './components/Task/TaskBlock';\nimport Tab from './components/Tab';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [isShown, setIsShown] = useState(false);\n\n  const [filteredTitle, setFilteredTitle] = useState('未完成');\n  const captureTasksHandler = (obj) => {\n    setFilteredTitle(obj.title);\n  };\n\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('TASKS'));\n    setTasks(storedTasks);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('TASKS', JSON.stringify(tasks));\n  }, [tasks]);\n\n  const addTaskHandler = (taskObj) => {\n    setTasks((prevTasks) => [taskObj, ...prevTasks]);\n    setIsShown(false);\n  };\n  const checkboxChangeHandler = (updateObj) => {\n    const clickItemIndex = tasks.findIndex((task) => task.id === updateObj.id);\n    const clickItem = tasks[clickItemIndex];\n\n    const updatedTask = { ...clickItem, state: updateObj.state };\n    let updatedTasks = [...tasks];\n    updatedTasks[clickItemIndex] = updatedTask;\n    setTasks(updatedTasks);\n  };\n\n  const deleteTaskHandler = (id) => {\n    const updatedTasks = tasks.filter((task) => task.id !== id);\n    setTasks(updatedTasks);\n  };\n  const deleteDoneTaskHandler = () => {\n    const updatedTasks = tasks.filter((task) => task.state === false);\n    setTasks(updatedTasks);\n  };\n  const showNewTaskHandler = (event) => {\n    event.stopPropagation();\n    setIsShown(true);\n  };\n  const closeNewTaskHandler = (event) => {\n    event.stopPropagation();\n    setIsShown(false);\n  };\n  return (\n    <div className=\"App\">\n      <Tab\n        onTab={captureTasksHandler}\n        tasks={tasks}\n      />\n      <TaskBlock\n        title={filteredTitle}\n        onAdd={addTaskHandler}\n        onDelete={deleteTaskHandler}\n        onToggle={checkboxChangeHandler}\n        onDeleteDone={deleteDoneTaskHandler}\n        tasks={tasks}\n        onShowNew={showNewTaskHandler}\n        onCloseNew={closeNewTaskHandler}\n        isShown={isShown}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}