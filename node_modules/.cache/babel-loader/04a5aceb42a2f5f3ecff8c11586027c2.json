{"ast":null,"code":"var _jsxFileName = \"/Users/mission/Documents/react-project-practice2/src/component/Task/TaskBlock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport TaskContext from '../../store/task-context';\nimport NewTask from './NewTask';\nimport classes from './TaskBlock.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskBlock = props => {\n  _s();\n\n  const taskCtx = useContext(TaskContext);\n  const [checkboxState, setCheckboxState] = useState();\n  const [inputValue, setInputValue] = useState();\n\n  let taskList = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u6C92\\u6709\\u63D0\\u9192\\u4E8B\\u9805\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 18\n  }, this);\n\n  const stateChangeHandler = event => {\n    setCheckboxState(event.target.value);\n  };\n\n  const valueChangerHandler = event => {\n    setInputValue(event.target.value);\n  };\n\n  const updateTaskHandler = () => {\n    taskCtx.addTask({\n      value: inputValue,\n      state: checkboxState\n    });\n  };\n\n  if (taskCtx.tasks.length > 0) {\n    taskList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: taskCtx.tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        onBlur: updateTaskHandler,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes['task'],\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: classes.checkbox,\n            type: \"checkbox\",\n            onChange: stateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: classes.text,\n            type: \"text\",\n            defaultValue: task.value,\n            value: inputValue,\n            onChange: valueChangerHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u672A\\u5B8C\\u6210\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), taskList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskBlock, \"smIckw/e5LIfW9mgRXmlY0lQ1Wk=\");\n\n_c = TaskBlock;\nexport default TaskBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBlock\");","map":{"version":3,"sources":["/Users/mission/Documents/react-project-practice2/src/component/Task/TaskBlock.js"],"names":["React","useState","useContext","TaskContext","NewTask","classes","TaskBlock","props","taskCtx","checkboxState","setCheckboxState","inputValue","setInputValue","taskList","stateChangeHandler","event","target","value","valueChangerHandler","updateTaskHandler","addTask","state","tasks","length","map","task","checkbox","text","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,OAAO,GAAGN,UAAU,CAACC,WAAD,CAA1B;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,EAAlD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,EAA5C;;AAEA,MAAIY,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;;AAEA,QAAMC,kBAAkB,GAAIC,KAAD,IAAS;AAClCL,IAAAA,gBAAgB,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AACD,GAFD;;AAGA,QAAMC,mBAAmB,GAAIH,KAAD,IAAS;AACnCH,IAAAA,aAAa,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAGA,QAAME,iBAAiB,GAAE,MAAI;AAC3BX,IAAAA,OAAO,CAACY,OAAR,CAAgB;AACdH,MAAAA,KAAK,EAAEN,UADO;AAEdU,MAAAA,KAAK,EAAEZ;AAFO,KAAhB;AAID,GALD;;AAOA,MAAID,OAAO,CAACc,KAAR,CAAcC,MAAd,GAAuB,CAA3B,EAA8B;AAC5BV,IAAAA,QAAQ,gBACN;AAAA,gBACGL,OAAO,CAACc,KAAR,CAAcE,GAAd,CAAmBC,IAAD,iBACjB;AAAkB,QAAA,MAAM,EAAEN,iBAA1B;AAAA,+BACE;AAAK,UAAA,SAAS,EAAEd,OAAO,CAAC,MAAD,CAAvB;AAAA,kCACE;AACE,YAAA,SAAS,EAAEA,OAAO,CAACqB,QADrB;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,QAAQ,EAAEZ;AAHZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAO,YAAA,SAAS,EAAET,OAAO,CAACsB,IAA1B;AAAgC,YAAA,IAAI,EAAC,MAArC;AAA4C,YAAA,YAAY,EAAEF,IAAI,CAACR,KAA/D;AAAsE,YAAA,KAAK,EAAEN,UAA7E;AAAyF,YAAA,QAAQ,EAAEO;AAAnG;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAASO,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGf,QAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA9CD;;GAAMP,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import React, { useState ,useContext } from 'react';\nimport TaskContext from '../../store/task-context';\nimport NewTask from './NewTask';\nimport classes from './TaskBlock.module.css';\n\nconst TaskBlock = (props) => {\n  const taskCtx = useContext(TaskContext);\n  const [checkboxState, setCheckboxState] = useState();\n  const [inputValue, setInputValue] = useState();\n\n  let taskList = <p>沒有提醒事項</p>;\n\n  const stateChangeHandler = (event)=>{\n    setCheckboxState(event.target.value);\n  };\n  const valueChangerHandler = (event)=>{\n    setInputValue(event.target.value)\n  };\n  const updateTaskHandler =()=>{\n    taskCtx.addTask({\n      value: inputValue,\n      state: checkboxState\n    })\n  }\n\n  if (taskCtx.tasks.length > 0) {\n    taskList = (\n      <ul>\n        {taskCtx.tasks.map((task) => (\n          <li key={task.id} onBlur={updateTaskHandler}>\n            <div className={classes['task']}>\n              <input\n                className={classes.checkbox}\n                type=\"checkbox\"\n                onChange={stateChangeHandler}\n              />\n              <input className={classes.text} type=\"text\" defaultValue={task.value} value={inputValue} onChange={valueChangerHandler}/>\n            </div>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  return (\n    <div>\n      <h2>未完成</h2>\n      <NewTask />\n      {taskList}\n    </div>\n  );\n};\n\nexport default TaskBlock;\n"]},"metadata":{},"sourceType":"module"}