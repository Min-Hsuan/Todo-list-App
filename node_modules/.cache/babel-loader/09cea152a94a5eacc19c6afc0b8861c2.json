{"ast":null,"code":"var _jsxFileName = \"/Users/mission/Documents/react-practice-to do list/src/component/Task/TaskBlock.js\";\nimport classes from './TaskBlock.module.css';\nimport NewTask from './NewTask';\nimport TaskItem from './TaskItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskBlock = props => {\n  const {\n    onAdd,\n    onDelete,\n    onToggle,\n    onDeleteDone,\n    tasks,\n    isShown,\n    onShowNew,\n    onCloseNew\n  } = props;\n  let filteredNum = 0;\n  let tabTitleColor = classes.todo;\n  let selectedTabTasks;\n\n  if (props.title === '已完成') {\n    selectedTabTasks = tasks.filter(task => task.state === true);\n    tabTitleColor = classes.done;\n  }\n\n  if (props.title === '未完成') {\n    selectedTabTasks = tasks.filter(task => !task.state);\n    tabTitleColor = classes.todo;\n  }\n\n  if (props.title === '全部') {\n    selectedTabTasks = tasks;\n    tabTitleColor = classes.all;\n  }\n\n  filteredNum = selectedTabTasks.length;\n  let taskList;\n\n  if (filteredNum > 0) {\n    taskList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: selectedTabTasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        id: task.id,\n        state: task.state,\n        value: task.value,\n        onDelete: onDelete,\n        onChangeState: onToggle\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  } else {\n    taskList = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u6C92\\u6709\\u63D0\\u9192\\u4E8B\\u9805\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes['tab-block'],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.backdrop,\n      onClick: onCloseNew\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes['tab-title']} ${tabTitleColor}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: filteredNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), taskList, isShown && /*#__PURE__*/_jsxDEV(NewTask, {\n      addTask: onAdd,\n      onCloseNew: onCloseNew\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['clean-done'],\n        onClick: onDeleteDone,\n        children: \"\\u6E05\\u9664\\u5DF2\\u5B8C\\u6210\\u9805\\u76EE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['button-add'],\n        onClick: onShowNew,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TaskBlock;\nexport default TaskBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBlock\");","map":{"version":3,"sources":["/Users/mission/Documents/react-practice-to do list/src/component/Task/TaskBlock.js"],"names":["classes","NewTask","TaskItem","TaskBlock","props","onAdd","onDelete","onToggle","onDeleteDone","tasks","isShown","onShowNew","onCloseNew","filteredNum","tabTitleColor","todo","selectedTabTasks","title","filter","task","state","done","all","length","taskList","map","id","value","backdrop","actions"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,wBAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,KALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,SAPI;AAQJC,IAAAA;AARI,MASFR,KATJ;AAYA,MAAIS,WAAW,GAAG,CAAlB;AACA,MAAIC,aAAa,GAAGd,OAAO,CAACe,IAA5B;AACA,MAAIC,gBAAJ;;AACA,MAAIZ,KAAK,CAACa,KAAN,KAAgB,KAApB,EAA2B;AACzBD,IAAAA,gBAAgB,GAAGP,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAe,IAAtC,CAAnB;AACAN,IAAAA,aAAa,GAAGd,OAAO,CAACqB,IAAxB;AACD;;AACD,MAAIjB,KAAK,CAACa,KAAN,KAAgB,KAApB,EAA2B;AACzBD,IAAAA,gBAAgB,GAAGP,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAU,CAACA,IAAI,CAACC,KAA7B,CAAnB;AACAN,IAAAA,aAAa,GAAGd,OAAO,CAACe,IAAxB;AACD;;AAED,MAAIX,KAAK,CAACa,KAAN,KAAgB,IAApB,EAA0B;AACxBD,IAAAA,gBAAgB,GAAGP,KAAnB;AACAK,IAAAA,aAAa,GAAGd,OAAO,CAACsB,GAAxB;AACD;;AACDT,EAAAA,WAAW,GAAGG,gBAAgB,CAACO,MAA/B;AACA,MAAIC,QAAJ;;AACA,MAAGX,WAAW,GAAG,CAAjB,EAAoB;AAClBW,IAAAA,QAAQ,gBACN;AAAA,gBACGR,gBAAgB,CAACS,GAAjB,CAAsBN,IAAD,iBACpB,QAAC,QAAD;AACE,QAAA,EAAE,EAAEA,IAAI,CAACO,EADX;AAGE,QAAA,KAAK,EAAEP,IAAI,CAACC,KAHd;AAIE,QAAA,KAAK,EAAED,IAAI,CAACQ,KAJd;AAKE,QAAA,QAAQ,EAAErB,QALZ;AAME,QAAA,aAAa,EAAEC;AANjB,SAEOY,IAAI,CAACO,EAFZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAhBD,MAgBK;AACHF,IAAAA,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAExB,OAAO,CAAC,WAAD,CAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEA,OAAO,CAAC4B,QAAxB;AAAkC,MAAA,OAAO,EAAEhB;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAG,GAAEZ,OAAO,CAAC,WAAD,CAAc,IAAGc,aAAc,EAAzD;AAAA,8BACE;AAAA,kBAAKV,KAAK,CAACa;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAMGW,QANH,EAOGd,OAAO,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEL,KAAlB;AAAyB,MAAA,UAAU,EAAEO;AAArC;AAAA;AAAA;AAAA;AAAA,YAPd,eAQE;AAAK,MAAA,SAAS,EAAEZ,OAAO,CAAC6B,OAAxB;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAE7B,OAAO,CAAC,YAAD,CAA1B;AAA0C,QAAA,OAAO,EAAEQ,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,SAAS,EAAER,OAAO,CAAC,YAAD,CAA1B;AAA0C,QAAA,OAAO,EAAEW,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAtED;;KAAMR,S;AAwEN,eAAeA,SAAf","sourcesContent":["import classes from './TaskBlock.module.css';\nimport NewTask from './NewTask';\nimport TaskItem from './TaskItem';\n\nconst TaskBlock = (props) => {\n  const {\n    onAdd,\n    onDelete,\n    onToggle,\n    onDeleteDone,\n    tasks,\n    isShown,\n    onShowNew,\n    onCloseNew,\n  } = props;\n\n  \n  let filteredNum = 0;\n  let tabTitleColor = classes.todo;\n  let selectedTabTasks;\n  if (props.title === '已完成') {\n    selectedTabTasks = tasks.filter((task) => task.state === true);\n    tabTitleColor = classes.done;\n  }\n  if (props.title === '未完成') {\n    selectedTabTasks = tasks.filter((task) => !task.state);\n    tabTitleColor = classes.todo;\n  }\n\n  if (props.title === '全部') {\n    selectedTabTasks = tasks;\n    tabTitleColor = classes.all;\n  }\n  filteredNum = selectedTabTasks.length;\n  let taskList;\n  if(filteredNum > 0 ){\n    taskList = (\n      <ul>\n        {selectedTabTasks.map((task) => (\n          <TaskItem\n            id={task.id}\n            key={task.id}\n            state={task.state}\n            value={task.value}\n            onDelete={onDelete}\n            onChangeState={onToggle}\n          />\n        ))}\n      </ul>\n    );\n    \n  }else{\n    taskList = <p>沒有提醒事項</p>;\n  }\n  \n  return (\n    <div className={classes['tab-block']}>\n      <div className={classes.backdrop} onClick={onCloseNew}></div>\n      <div className={`${classes['tab-title']} ${tabTitleColor}`}>\n        <h2>{props.title}</h2>\n        <h2>{filteredNum}</h2>\n      </div>\n      {taskList}\n      {isShown && <NewTask addTask={onAdd} onCloseNew={onCloseNew} />}\n      <div className={classes.actions}>\n        <button className={classes['clean-done']} onClick={onDeleteDone}>\n          清除已完成項目\n        </button>\n        <button className={classes['button-add']} onClick={onShowNew}>\n          +\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskBlock;\n"]},"metadata":{},"sourceType":"module"}