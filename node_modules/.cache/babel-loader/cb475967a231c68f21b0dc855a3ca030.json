{"ast":null,"code":"var _jsxFileName = \"/Users/mission/Documents/react-project-practice2/src/component/Task/TaskBlock.js\",\n    _s = $RefreshSig$();\n\nimport classes from './TaskBlock.module.css';\nimport { useState } from 'react';\nimport NewTask from './NewTask';\nimport TaskItem from './TaskItem'; // import TaskContext from '../../store/task-context';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskBlock = props => {\n  _s();\n\n  // const taskCtx = useContext(TaskContext);\n  const [tasks, setTasks] = useState([]);\n  const [isShown, setIsShown] = useState(false);\n\n  const addTaskHandler = taskObj => {\n    setTasks(prevTasks => [taskObj, ...prevTasks]);\n    setIsShown(false);\n  };\n\n  const checkboxChangeHandler = updateObj => {\n    const clickItemIndex = tasks.findIndex(task => task.id === updateObj.id);\n    const clickItem = tasks[clickItemIndex];\n    const updatedTask = { ...clickItem,\n      state: updateObj.state\n    };\n    let updatedTasks = [...tasks];\n    updatedTasks[clickItemIndex] = updatedTask;\n    setTasks(updatedTasks);\n  };\n\n  const showNewTaskHandler = event => {\n    event.stopPropagation();\n    setIsShown(true);\n  };\n\n  const closeNewTaskHandler = event => {\n    event.stopPropagation();\n    setIsShown(false);\n  };\n\n  const deleteTaskHandler = id => {\n    const updatedTasks = tasks.filter(task => task.id !== id);\n    setTasks(updatedTasks);\n  };\n\n  const deleteDoneTaskHandler = () => {\n    const updatedTasks = tasks.filter(task => task.state === false);\n    setTasks(updatedTasks);\n  };\n\n  let taskList = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u6C92\\u6709\\u63D0\\u9192\\u4E8B\\u9805\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 18\n  }, this);\n\n  let filteredNum = 0;\n  let tabTitleColor = classes.todo;\n  const filteredDoneTask = tasks.filter(task => task.state === true);\n  const filteredTodoTask = tasks.filter(task => task.state === false);\n\n  if (props.title === '已完成') {\n    filteredNum = filteredDoneTask.length;\n    tabTitleColor = classes.done;\n    taskList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredDoneTask.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        id: task.id,\n        state: task.state,\n        value: task.value,\n        onDelete: deleteTaskHandler,\n        onChangeState: checkboxChangeHandler\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (props.title === '未完成') {\n    filteredNum = filteredTodoTask.length;\n    tabTitleColor = classes.todo;\n    taskList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTodoTask.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        id: task.id,\n        state: task.state,\n        value: task.value,\n        onDelete: deleteTaskHandler,\n        onChangeState: checkboxChangeHandler\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (props.title === '全部') {\n    filteredNum = tasks.length;\n    tabTitleColor = classes.all;\n    taskList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        id: task.id,\n        value: task.value,\n        state: task.state,\n        onDelete: deleteTaskHandler,\n        onChangeState: checkboxChangeHandler\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes['tab-block'],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.backdrop,\n      onClick: closeNewTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes['tab-title']} ${tabTitleColor}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: filteredNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), taskList, isShown && /*#__PURE__*/_jsxDEV(NewTask, {\n      addTask: addTaskHandler,\n      onCloseNew: closeNewTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['clean-done'],\n        onClick: deleteDoneTaskHandler,\n        children: \"\\u6E05\\u9664\\u5DF2\\u5B8C\\u6210\\u9805\\u76EE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['button-add'],\n        onClick: showNewTaskHandler,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskBlock, \"bj75pHZH5fGDbFIo4zIBU93bq78=\");\n\n_c = TaskBlock;\nexport default TaskBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBlock\");","map":{"version":3,"sources":["/Users/mission/Documents/react-project-practice2/src/component/Task/TaskBlock.js"],"names":["classes","useState","NewTask","TaskItem","TaskBlock","props","tasks","setTasks","isShown","setIsShown","addTaskHandler","taskObj","prevTasks","checkboxChangeHandler","updateObj","clickItemIndex","findIndex","task","id","clickItem","updatedTask","state","updatedTasks","showNewTaskHandler","event","stopPropagation","closeNewTaskHandler","deleteTaskHandler","filter","deleteDoneTaskHandler","taskList","filteredNum","tabTitleColor","todo","filteredDoneTask","filteredTodoTask","title","length","done","map","value","all","backdrop","actions"],"mappings":"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","sourcesContent":["import classes from './TaskBlock.module.css';\nimport { useState } from 'react';\nimport NewTask from './NewTask';\nimport TaskItem from './TaskItem';\n// import TaskContext from '../../store/task-context';\n\nconst TaskBlock = (props) => {\n  // const taskCtx = useContext(TaskContext);\n\n  const [tasks, setTasks] = useState([]);\n  const [isShown, setIsShown] = useState(false);\n  const addTaskHandler = (taskObj) => {\n    setTasks((prevTasks) => [taskObj, ...prevTasks]);\n    setIsShown(false);\n  };\n  const checkboxChangeHandler = (updateObj) => {\n    const clickItemIndex = tasks.findIndex((task) => task.id === updateObj.id);\n    const clickItem = tasks[clickItemIndex];\n\n    const updatedTask = { ...clickItem, state: updateObj.state };\n    let updatedTasks = [...tasks];\n    updatedTasks[clickItemIndex] = updatedTask;\n    setTasks(updatedTasks);\n  };\n\n  const showNewTaskHandler = (event) => {\n    event.stopPropagation();\n    setIsShown(true);\n  };\n  const closeNewTaskHandler = (event) => {\n    event.stopPropagation();\n    setIsShown(false);\n  };\n  const deleteTaskHandler = (id) => {\n    const updatedTasks = tasks.filter((task) => task.id !== id);\n    setTasks(updatedTasks);\n  };\n  const deleteDoneTaskHandler = () => {\n    const updatedTasks = tasks.filter((task) => task.state === false);\n    setTasks(updatedTasks);\n  };\n  let taskList = <p>沒有提醒事項</p>;\n  let filteredNum = 0;\n  let tabTitleColor = classes.todo;\n  const filteredDoneTask = tasks.filter((task) => task.state === true);\n  const filteredTodoTask = tasks.filter((task) => task.state === false);\n\n  if (props.title === '已完成') {\n    filteredNum = filteredDoneTask.length;\n    tabTitleColor = classes.done;\n    taskList = (\n      <ul>\n        {filteredDoneTask.map((task) => (\n          <TaskItem\n            id={task.id}\n            key={task.id}\n            state={task.state}\n            value={task.value}\n            onDelete={deleteTaskHandler}\n            onChangeState={checkboxChangeHandler}\n          />\n        ))}\n      </ul>\n    );\n  }\n  if (props.title === '未完成') {\n    filteredNum = filteredTodoTask.length;\n    tabTitleColor = classes.todo;\n    taskList = (\n      <ul>\n        {filteredTodoTask.map((task) => (\n          <TaskItem\n            id={task.id}\n            key={task.id}\n            state={task.state}\n            value={task.value}\n            onDelete={deleteTaskHandler}\n            onChangeState={checkboxChangeHandler}\n          />\n        ))}\n      </ul>\n    );\n  }\n\n  if (props.title === '全部') {\n    filteredNum = tasks.length;\n    tabTitleColor = classes.all;\n    taskList = (\n      <ul>\n        {tasks.map((task) => (\n          <TaskItem\n            id={task.id}\n            key={task.id}\n            value={task.value}\n            state={task.state}\n            onDelete={deleteTaskHandler}\n            onChangeState={checkboxChangeHandler}\n          />\n        ))}\n      </ul>\n    );\n  }\n  return (\n    <div className={classes['tab-block']}>\n      <div className={classes.backdrop} onClick={closeNewTaskHandler}></div>\n      <div className={`${classes['tab-title']} ${tabTitleColor}`}>\n        <h2>{props.title}</h2>\n        <h2>{filteredNum}</h2>\n      </div>\n      {taskList}\n      {isShown && (\n        <NewTask addTask={addTaskHandler} onCloseNew={closeNewTaskHandler} />\n      )}\n      <div className={classes.actions}>\n        <button\n          className={classes['clean-done']}\n          onClick={deleteDoneTaskHandler}\n        >\n          清除已完成項目\n        </button>\n        <button className={classes['button-add']} onClick={showNewTaskHandler}>\n          +\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskBlock;\n"]},"metadata":{},"sourceType":"module"}