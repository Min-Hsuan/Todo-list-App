{"ast":null,"code":"var _jsxFileName = \"/Users/mission/Documents/react-project-practice2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from 'react';\nimport './App.css';\nimport TaskBlock from './component/Task/TaskBlock';\nimport Tab from './component/Tab';\nimport TaskContext from './store/task-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const taskCtx = useContext(TaskContext);\n  const [tasks, setTasks] = useState(taskCtx.tasks);\n  const [filteredTitle, setFilteredTitle] = useState('未完成');\n\n  const captureTasksHandler = obj => {\n    if (obj.title === '未完成') {\n      const filteredTask = tasks.filter(task => task.state === false);\n      setTasks(filteredTask);\n    }\n\n    if (obj.title === '已完成') {\n      const filteredTask = tasks.filter(task => task.state === true);\n      setTasks(filteredTask);\n    }\n\n    if (obj.title === '全部') {\n      const filteredTask = taskCtx.tasks;\n      setTasks(filteredTask);\n    }\n\n    setFilteredTitle(obj.title);\n  };\n\n  useEffect(() => {\n    captureTasksHandler();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Tab, {\n      onTab: captureTasksHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskBlock, {\n      title: filteredTitle,\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8J85kgkyVTX1k4hFOxg+kFNLjv4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mission/Documents/react-project-practice2/src/App.js"],"names":["useState","useContext","useEffect","TaskBlock","Tab","TaskContext","App","taskCtx","tasks","setTasks","filteredTitle","setFilteredTitle","captureTasksHandler","obj","title","filteredTask","filter","task","state"],"mappings":";;;AACA,SAAQA,QAAR,EAAkBC,UAAlB,EAA8BC,SAA9B,QAA8C,OAA9C;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,OAAO,GAAGN,UAAU,CAACI,WAAD,CAA1B;AACA,QAAM,CAACG,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAACO,OAAO,CAACC,KAAT,CAAjC;AACA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,KAAD,CAAlD;;AACA,QAAMY,mBAAmB,GAAIC,GAAD,IAAO;AACjC,QAAGA,GAAG,CAACC,KAAJ,KAAY,KAAf,EAAqB;AACnB,YAAMC,YAAY,GAAGP,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAGA,IAAI,CAACC,KAAL,KAAa,KAAjC,CAArB;AACAT,MAAAA,QAAQ,CAACM,YAAD,CAAR;AACD;;AAED,QAAGF,GAAG,CAACC,KAAJ,KAAY,KAAf,EAAqB;AACnB,YAAMC,YAAY,GAAGP,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAGA,IAAI,CAACC,KAAL,KAAa,IAAjC,CAArB;AACAT,MAAAA,QAAQ,CAACM,YAAD,CAAR;AACD;;AAED,QAAGF,GAAG,CAACC,KAAJ,KAAY,IAAf,EAAoB;AAClB,YAAMC,YAAY,GAAGR,OAAO,CAACC,KAA7B;AACAC,MAAAA,QAAQ,CAACM,YAAD,CAAR;AACD;;AACDJ,IAAAA,gBAAgB,CAACE,GAAG,CAACC,KAAL,CAAhB;AACD,GAhBD;;AAiBAZ,EAAAA,SAAS,CAAC,MAAI;AACZU,IAAAA,mBAAmB;AACpB,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEF,aAAlB;AAAiC,MAAA,KAAK,EAAEF;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA/BQF,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["\nimport {useState, useContext ,useEffect} from 'react';\nimport './App.css';\nimport TaskBlock from './component/Task/TaskBlock';\nimport Tab from './component/Tab';\nimport TaskContext from './store/task-context';\n\nfunction App() {\n  const taskCtx = useContext(TaskContext);\n  const [tasks,setTasks] = useState(taskCtx.tasks)\n  const [filteredTitle, setFilteredTitle] = useState('未完成');\n  const captureTasksHandler = (obj)=>{\n    if(obj.title==='未完成'){\n      const filteredTask = tasks.filter(task=> task.state===false)\n      setTasks(filteredTask)\n    }\n\n    if(obj.title==='已完成'){\n      const filteredTask = tasks.filter(task=> task.state===true)\n      setTasks(filteredTask)\n    }\n\n    if(obj.title==='全部'){\n      const filteredTask = taskCtx.tasks\n      setTasks(filteredTask)\n    }\n    setFilteredTitle(obj.title)\n  }\n  useEffect(()=>{\n    captureTasksHandler()\n  },[])\n\n  return (\n    <div className=\"App\">\n      <Tab onTab={captureTasksHandler} />\n      <TaskBlock title={filteredTitle} tasks={tasks} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}