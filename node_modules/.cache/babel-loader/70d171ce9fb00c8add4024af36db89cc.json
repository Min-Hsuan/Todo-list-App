{"ast":null,"code":"var _jsxFileName = \"/Users/mission/Documents/react-practice-to do list/src/component/Task/TaskBlock.js\";\nimport classes from './TaskBlock.module.css';\nimport NewTask from './NewTask';\nimport TaskItem from './TaskItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskBlock = props => {\n  const {\n    onAdd,\n    onDelete,\n    onToggle,\n    onDeleteDone,\n    tasks,\n    isShown,\n    onShowNew,\n    onCloseNew\n  } = props;\n\n  let taskList = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u6C92\\u6709\\u63D0\\u9192\\u4E8B\\u9805\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 18\n  }, this);\n\n  let filteredNum = 0;\n  let tabTitleColor = classes.todo;\n  let selectedTabTasks;\n\n  if (props.title === '已完成') {\n    selectedTabTasks = tasks.filter(task => task.state === true);\n    tabTitleColor = classes.done;\n  }\n\n  if (props.title === '未完成') {\n    selectedTabTasks = tasks.filter(task => !task.state);\n    tabTitleColor = classes.todo;\n  }\n\n  if (props.title === '全部') {\n    selectedTabTasks = tasks;\n    tabTitleColor = classes.all;\n  }\n\n  filteredNum = selectedTabTasks.length;\n  taskList = /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: selectedTabTasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n      id: task.id,\n      state: task.state,\n      value: task.value,\n      onDelete: onDelete,\n      onChangeState: onToggle\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes['tab-block'],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.backdrop,\n      onClick: onCloseNew\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes['tab-title']} ${tabTitleColor}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: filteredNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), taskList, isShown && /*#__PURE__*/_jsxDEV(NewTask, {\n      addTask: onAdd,\n      onCloseNew: onCloseNew\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['clean-done'],\n        onClick: onDeleteDone,\n        children: \"\\u6E05\\u9664\\u5DF2\\u5B8C\\u6210\\u9805\\u76EE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['button-add'],\n        onClick: onShowNew,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TaskBlock;\nexport default TaskBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBlock\");","map":{"version":3,"sources":["/Users/mission/Documents/react-practice-to do list/src/component/Task/TaskBlock.js"],"names":["classes","NewTask","TaskItem","TaskBlock","props","onAdd","onDelete","onToggle","onDeleteDone","tasks","isShown","onShowNew","onCloseNew","taskList","filteredNum","tabTitleColor","todo","selectedTabTasks","title","filter","task","state","done","all","length","map","id","value","backdrop","actions"],"mappings":"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","sourcesContent":["import classes from './TaskBlock.module.css';\nimport NewTask from './NewTask';\nimport TaskItem from './TaskItem';\n\nconst TaskBlock = (props) => {\n  const {\n    onAdd,\n    onDelete,\n    onToggle,\n    onDeleteDone,\n    tasks,\n    isShown,\n    onShowNew,\n    onCloseNew,\n  } = props;\n  let taskList = <p>沒有提醒事項</p>;\n  let filteredNum = 0;\n  let tabTitleColor = classes.todo;\n  let selectedTabTasks;\n  if (props.title === '已完成') {\n    selectedTabTasks = tasks.filter((task) => task.state === true);\n    tabTitleColor = classes.done;\n  }\n  if (props.title === '未完成') {\n    selectedTabTasks = tasks.filter((task) => !task.state);\n    tabTitleColor = classes.todo;\n  }\n\n  if (props.title === '全部') {\n    selectedTabTasks = tasks;\n    tabTitleColor = classes.all;\n  }\n  filteredNum = selectedTabTasks.length;\n\n  taskList = (\n    <ul>\n      {selectedTabTasks.map((task) => (\n        <TaskItem\n          id={task.id}\n          key={task.id}\n          state={task.state}\n          value={task.value}\n          onDelete={onDelete}\n          onChangeState={onToggle}\n        />\n      ))}\n    </ul>\n  );\n  return (\n    <div className={classes['tab-block']}>\n      <div className={classes.backdrop} onClick={onCloseNew}></div>\n      <div className={`${classes['tab-title']} ${tabTitleColor}`}>\n        <h2>{props.title}</h2>\n        <h2>{filteredNum}</h2>\n      </div>\n      {taskList}\n      {isShown && <NewTask addTask={onAdd} onCloseNew={onCloseNew} />}\n      <div className={classes.actions}>\n        <button className={classes['clean-done']} onClick={onDeleteDone}>\n          清除已完成項目\n        </button>\n        <button className={classes['button-add']} onClick={onShowNew}>\n          +\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskBlock;\n"]},"metadata":{},"sourceType":"module"}