{"ast":null,"code":"var _jsxFileName = \"/Users/mission/Documents/react-project-practice2/src/component/Task/TaskBlock.js\",\n    _s = $RefreshSig$();\n\nimport classes from './TaskBlock.module.css';\nimport { useState } from 'react';\nimport NewTask from './NewTask';\nimport TaskItem from './TaskItem'; // import TaskContext from '../../store/task-context';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskBlock = props => {\n  _s();\n\n  // const taskCtx = useContext(TaskContext);\n  const [tasks, setTasks] = useState([]);\n  const [taskNum, setTaskNum] = useState(0);\n\n  const addTaskHandler = taskObj => {\n    setTasks(prevTasks => [taskObj, ...prevTasks]);\n  };\n\n  const checkboxChangeHandler = updateObj => {\n    const clickItemIndex = tasks.findIndex(task => task.id === updateObj.id);\n    const clickItem = tasks[clickItemIndex];\n    const updatedTask = { ...clickItem,\n      state: updateObj.state\n    };\n    let updatedTasks = [...tasks];\n    updatedTasks[clickItemIndex] = updatedTask;\n    setTasks(updatedTasks);\n  };\n\n  let taskList = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u6C92\\u6709\\u63D0\\u9192\\u4E8B\\u9805\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 18\n  }, this);\n\n  if (props.title === '已完成') {\n    const filteredTask = tasks.filter(task => task.state === true);\n    const filteredNum = filteredTask.length;\n    setTaskNum(filteredNum);\n    taskList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTask.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        id: task.id,\n        state: task.state,\n        value: task.value,\n        onChangeState: checkboxChangeHandler\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (props.title === '未完成') {\n    const filteredTask = tasks.filter(task => task.state === false);\n    const filteredNum = filteredTask.length;\n    setTaskNum(filteredNum);\n    taskList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTask.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        id: task.id,\n        state: task.state,\n        value: task.value,\n        onChangeState: checkboxChangeHandler\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (props.title === '全部') {\n    const filteredNum = tasks.length;\n    setTaskNum(filteredNum);\n    taskList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        id: task.id,\n        value: task.value,\n        state: task.state,\n        onChangeState: checkboxChangeHandler\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes['tab-block'],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['tab-title'],\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: taskNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), taskList, /*#__PURE__*/_jsxDEV(NewTask, {\n      addTask: addTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskBlock, \"WJYfqbybcXd6qnHlXdEnZ2S3qAU=\");\n\n_c = TaskBlock;\nexport default TaskBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBlock\");","map":{"version":3,"sources":["/Users/mission/Documents/react-project-practice2/src/component/Task/TaskBlock.js"],"names":["classes","useState","NewTask","TaskItem","TaskBlock","props","tasks","setTasks","taskNum","setTaskNum","addTaskHandler","taskObj","prevTasks","checkboxChangeHandler","updateObj","clickItemIndex","findIndex","task","id","clickItem","updatedTask","state","updatedTasks","taskList","title","filteredTask","filter","filteredNum","length","map","value"],"mappings":"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","sourcesContent":["import classes from './TaskBlock.module.css';\nimport { useState } from 'react';\nimport NewTask from './NewTask';\nimport TaskItem from './TaskItem';\n// import TaskContext from '../../store/task-context';\n\nconst TaskBlock = (props) => {\n  // const taskCtx = useContext(TaskContext);\n\n  const [tasks, setTasks] = useState([]);\n  const [taskNum ,setTaskNum] = useState(0);\n  const addTaskHandler = (taskObj) => {\n    setTasks((prevTasks) => [taskObj, ...prevTasks]);\n  };\n  const checkboxChangeHandler = (updateObj) => {\n    const clickItemIndex = tasks.findIndex((task) => task.id === updateObj.id);\n    const clickItem = tasks[clickItemIndex];\n\n    const updatedTask = { ...clickItem, state: updateObj.state };\n    let updatedTasks = [...tasks];\n    updatedTasks[clickItemIndex] = updatedTask;\n    setTasks(updatedTasks);\n  };\n\n  let taskList = <p>沒有提醒事項</p>;\n\n  if (props.title === '已完成') {\n    const filteredTask = tasks.filter((task) => task.state === true);\n    const filteredNum = filteredTask.length;\n    setTaskNum(filteredNum);\n    taskList = (\n      <ul>\n        {filteredTask.map((task) => (\n          <TaskItem\n            id={task.id}\n            key={task.id}\n            state={task.state}\n            value={task.value}\n            onChangeState={checkboxChangeHandler}\n          />\n        ))}\n      </ul>\n    );\n  }\n  if (props.title === '未完成') {\n    const filteredTask = tasks.filter((task) => task.state === false);\n    \n    const filteredNum = filteredTask.length;\n    setTaskNum(filteredNum);\n\n    taskList = (\n      <ul>\n        {filteredTask.map((task) => (\n          <TaskItem\n            id={task.id}\n            key={task.id}\n            state={task.state}\n            value={task.value}\n            onChangeState={checkboxChangeHandler}\n          />\n        ))}\n      </ul>\n    );\n  }\n\n  if (props.title === '全部') {\n    const filteredNum = tasks.length;\n    setTaskNum(filteredNum);\n    taskList = (\n      <ul>\n        {tasks.map((task) => (\n          <TaskItem\n            id={task.id}\n            key={task.id}\n            value={task.value}\n            state={task.state}\n            onChangeState={checkboxChangeHandler}\n          />\n        ))}\n      </ul>\n    );\n  }\n  return (\n    <div className={classes['tab-block']}>\n      <div className={classes['tab-title']}>\n        <h2>{props.title}</h2>\n        <h2>{taskNum}</h2>\n      </div>\n      {taskList}\n      <NewTask addTask={addTaskHandler} />\n    </div>\n  );\n};\n\nexport default TaskBlock;\n"]},"metadata":{},"sourceType":"module"}