{"ast":null,"code":"var _jsxFileName = \"/Users/mission/Documents/react-practice-to do list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport TaskBlock from './component/Task/TaskBlock';\nimport Tab from './component/Tab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [filteredTitle, setFilteredTitle] = useState('未完成');\n  const [tabNum, setTabNum] = useState({});\n\n  const captureTasksHandler = obj => {\n    setFilteredTitle(obj.title);\n  };\n\n  const tabNumHandler = numObj => {\n    setTabNum(numObj);\n  };\n\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('TASKS'));\n    setTasks(storedTasks);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('TASKS', JSON.stringify(tasks));\n  }, [tasks]);\n\n  const addTaskHandler = taskObj => {\n    setTasks(prevTasks => [taskObj, ...prevTasks]); // const lastestTasks = [taskObj ,...tasks ]\n    // setIsShown(false);\n    // const tabNumObj = {\n    //   todoNum: tasks.filter((task) => task.state === false).length,\n    //   doneNum: tasks.filter((task) => task.state === true).length,\n    //   allNum: tasks.length,\n    // };\n    // props.onTaskNum(tabNumObj);\n    // console.log(tabNumObj);\n  };\n\n  const checkboxChangeHandler = updateObj => {\n    const clickItemIndex = tasks.findIndex(task => task.id === updateObj.id);\n    const clickItem = tasks[clickItemIndex];\n    const updatedTask = { ...clickItem,\n      state: updateObj.state\n    };\n    let updatedTasks = [...tasks];\n    updatedTasks[clickItemIndex] = updatedTask;\n    setTasks(updatedTasks); // const tabNumObj = {\n    //   todoNum: todoListFn(updatedTasks).length,\n    //   doneNum: doneListFn(updatedTasks).length,\n    //   allNum: updatedTasks.length,\n    // };\n    // props.onTaskNum(tabNumObj);\n  };\n\n  const deleteTaskHandler = id => {\n    const updatedTasks = tasks.filter(task => task.id !== id);\n    setTasks(updatedTasks);\n  };\n\n  const deleteDoneTaskHandler = () => {\n    const updatedTasks = tasks.filter(task => task.state === false);\n    setTasks(updatedTasks); // const tabNumObj = {\n    //   todoNum: todoListFn(updatedTasks).length,\n    //   doneNum: doneListFn(updatedTasks).length,\n    //   allNum: updatedTasks.length,\n    // };\n    // props.onTaskNum(tabNumObj);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Tab, {\n      onTab: captureTasksHandler,\n      todoNum: tabNum.todoNum,\n      doneNum: tabNum.doneNum,\n      allNum: tabNum.allNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskBlock, {\n      title: filteredTitle,\n      onTaskNum: tabNumHandler,\n      onAdd: addTaskHandler,\n      onDelete: deleteTaskHandler,\n      onToggle: checkboxChangeHandler,\n      onDeleteDone: deleteDoneTaskHandler,\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MvgiiAMbc3sCbeTMLJlVFYJMYdw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mission/Documents/react-practice-to do list/src/App.js"],"names":["useState","useEffect","TaskBlock","Tab","App","tasks","setTasks","filteredTitle","setFilteredTitle","tabNum","setTabNum","captureTasksHandler","obj","title","tabNumHandler","numObj","storedTasks","JSON","parse","localStorage","getItem","setItem","stringify","addTaskHandler","taskObj","prevTasks","checkboxChangeHandler","updateObj","clickItemIndex","findIndex","task","id","clickItem","updatedTask","state","updatedTasks","deleteTaskHandler","filter","deleteDoneTaskHandler","todoNum","doneNum","allNum"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport TaskBlock from './component/Task/TaskBlock';\nimport Tab from './component/Tab';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const [filteredTitle, setFilteredTitle] = useState('未完成');\n  const [tabNum, setTabNum] = useState({});\n  const captureTasksHandler = (obj) => {\n    setFilteredTitle(obj.title);\n  };\n  const tabNumHandler = (numObj) => {\n    setTabNum(numObj);\n  };\n\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('TASKS'));\n    setTasks(storedTasks);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('TASKS', JSON.stringify(tasks));\n  }, [tasks]);\n\n  const addTaskHandler = (taskObj) => {\n    setTasks((prevTasks) => [taskObj, ...prevTasks]);\n    // const lastestTasks = [taskObj ,...tasks ]\n    // setIsShown(false);\n    // const tabNumObj = {\n    //   todoNum: tasks.filter((task) => task.state === false).length,\n    //   doneNum: tasks.filter((task) => task.state === true).length,\n    //   allNum: tasks.length,\n    // };\n    // props.onTaskNum(tabNumObj);\n    // console.log(tabNumObj);\n  };\n  const checkboxChangeHandler = (updateObj) => {\n    const clickItemIndex = tasks.findIndex((task) => task.id === updateObj.id);\n    const clickItem = tasks[clickItemIndex];\n\n    const updatedTask = { ...clickItem, state: updateObj.state };\n    let updatedTasks = [...tasks];\n    updatedTasks[clickItemIndex] = updatedTask;\n    setTasks(updatedTasks);\n\n    // const tabNumObj = {\n    //   todoNum: todoListFn(updatedTasks).length,\n    //   doneNum: doneListFn(updatedTasks).length,\n    //   allNum: updatedTasks.length,\n    // };\n    // props.onTaskNum(tabNumObj);\n  };\n\n  const deleteTaskHandler = (id) => {\n    const updatedTasks = tasks.filter((task) => task.id !== id);\n    setTasks(updatedTasks);\n  };\n  const deleteDoneTaskHandler = () => {\n    const updatedTasks = tasks.filter((task) => task.state === false);\n    setTasks(updatedTasks);\n\n    // const tabNumObj = {\n    //   todoNum: todoListFn(updatedTasks).length,\n    //   doneNum: doneListFn(updatedTasks).length,\n    //   allNum: updatedTasks.length,\n    // };\n    // props.onTaskNum(tabNumObj);\n  };\n\n  return (\n    <div className=\"App\">\n      <Tab\n        onTab={captureTasksHandler}\n        todoNum={tabNum.todoNum}\n        doneNum={tabNum.doneNum}\n        allNum={tabNum.allNum}\n      />\n      <TaskBlock title={filteredTitle} onTaskNum={tabNumHandler} onAdd={addTaskHandler} onDelete={deleteTaskHandler} onToggle={checkboxChangeHandler} onDeleteDone={deleteDoneTaskHandler} tasks={tasks} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}