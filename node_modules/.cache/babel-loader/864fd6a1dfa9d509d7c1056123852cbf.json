{"ast":null,"code":"var _jsxFileName = \"/Users/mission/Documents/react-project-practice2/src/component/Task/TaskBlock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport TaskContext from '../../store/task-context';\nimport NewTask from './NewTask';\nimport classes from './TaskBlock.module.css';\nimport TaskItem from './TaskItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskBlock = props => {\n  _s();\n\n  const taskCtx = useContext(TaskContext);\n  const [checkboxState, setCheckboxState] = useState();\n  const [itemId, setItemId] = useState();\n  const [inputValue, setInputValue] = useState();\n\n  let taskList = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u6C92\\u6709\\u63D0\\u9192\\u4E8B\\u9805\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 18\n  }, this);\n\n  const stateChangeHandler = event => {\n    setCheckboxState(event.target.value);\n    console.log(event.target.checked);\n  };\n\n  const valueChangerHandler = event => {\n    setInputValue(event.target.value);\n    console.log(event.target.value);\n  };\n\n  const idGetHandler = id => {\n    setItemId(id);\n  };\n\n  const updateTaskHandler = () => {\n    taskCtx.addTask({\n      id: itemId,\n      value: inputValue,\n      state: checkboxState\n    });\n    console.log(taskCtx.tasks);\n  };\n\n  if (taskCtx.tasks.length > 0) {\n    taskList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: taskCtx.tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        id: task.id,\n        value: task.value\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u672A\\u5B8C\\u6210\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), taskList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskBlock, \"PgR8CUzn+rMsQh3GWfOJzzurtKI=\");\n\n_c = TaskBlock;\nexport default TaskBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBlock\");","map":{"version":3,"sources":["/Users/mission/Documents/react-project-practice2/src/component/Task/TaskBlock.js"],"names":["React","useState","useContext","TaskContext","NewTask","classes","TaskItem","TaskBlock","props","taskCtx","checkboxState","setCheckboxState","itemId","setItemId","inputValue","setInputValue","taskList","stateChangeHandler","event","target","value","console","log","checked","valueChangerHandler","idGetHandler","id","updateTaskHandler","addTask","state","tasks","length","map","task"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,OAAO,GAAGP,UAAU,CAACC,WAAD,CAA1B;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,EAAlD;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,EAApC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,EAA5C;;AAEA,MAAIe,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;;AAEA,QAAMC,kBAAkB,GAAIC,KAAD,IAAS;AAClCP,IAAAA,gBAAgB,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,MAAN,CAAaI,OAAzB;AACD,GAHD;;AAIA,QAAMC,mBAAmB,GAAIN,KAAD,IAAS;AACnCH,IAAAA,aAAa,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,MAAN,CAAaC,KAAzB;AAED,GAJD;;AAKA,QAAMK,YAAY,GAAIC,EAAD,IAAM;AACzBb,IAAAA,SAAS,CAACa,EAAD,CAAT;AAED,GAHD;;AAIA,QAAMC,iBAAiB,GAAE,MAAI;AAC3BlB,IAAAA,OAAO,CAACmB,OAAR,CAAgB;AACdF,MAAAA,EAAE,EAAEd,MADU;AAEdQ,MAAAA,KAAK,EAAEN,UAFO;AAGde,MAAAA,KAAK,EAAEnB;AAHO,KAAhB;AAKAW,IAAAA,OAAO,CAACC,GAAR,CAAYb,OAAO,CAACqB,KAApB;AACD,GAPD;;AASA,MAAIrB,OAAO,CAACqB,KAAR,CAAcC,MAAd,GAAuB,CAA3B,EAA8B;AAC5Bf,IAAAA,QAAQ,gBACN;AAAA,gBACGP,OAAO,CAACqB,KAAR,CAAcE,GAAd,CAAmBC,IAAD,iBAAU,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEA,IAAI,CAACP,EAAnB;AAAqC,QAAA,KAAK,EAAEO,IAAI,CAACb;AAAjD,SAA4Ba,IAAI,CAACP,EAAjC;AAAA;AAAA;AAAA;AAAA,cAA5B;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGV,QAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA7CD;;GAAMT,S;;KAAAA,S;AA+CN,eAAeA,SAAf","sourcesContent":["import React, { useState ,useContext } from 'react';\nimport TaskContext from '../../store/task-context';\nimport NewTask from './NewTask';\nimport classes from './TaskBlock.module.css';\nimport TaskItem from './TaskItem';\n\nconst TaskBlock = (props) => {\n  const taskCtx = useContext(TaskContext);\n  const [checkboxState, setCheckboxState] = useState();\n  const [itemId, setItemId] = useState();\n  const [inputValue, setInputValue] = useState();\n\n  let taskList = <p>沒有提醒事項</p>;\n\n  const stateChangeHandler = (event)=>{\n    setCheckboxState(event.target.value);\n    console.log(event.target.checked)\n  };\n  const valueChangerHandler = (event)=>{\n    setInputValue(event.target.value)\n    console.log(event.target.value)\n\n  };\n  const idGetHandler = (id)=>{\n    setItemId(id)\n\n  }\n  const updateTaskHandler =()=>{\n    taskCtx.addTask({\n      id: itemId,\n      value: inputValue,\n      state: checkboxState\n    })\n    console.log(taskCtx.tasks)\n  }\n\n  if (taskCtx.tasks.length > 0) {\n    taskList = (\n      <ul>\n        {taskCtx.tasks.map((task) => <TaskItem id={task.id} key={task.id} value={task.value} />)}\n      </ul>\n    );\n  }\n\n  return (\n    <div>\n      <h2>未完成</h2>\n      <NewTask />\n      {taskList}\n    </div>\n  );\n};\n\nexport default TaskBlock;\n"]},"metadata":{},"sourceType":"module"}