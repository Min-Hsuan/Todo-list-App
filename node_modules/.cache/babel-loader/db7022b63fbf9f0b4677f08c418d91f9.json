{"ast":null,"code":"import _objectSpread from\"/Users/mission/Documents/react-practice-to do list/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/mission/Documents/react-practice-to do list/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/mission/Documents/react-practice-to do list/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import'./App.css';import TaskBlock from'./components/Task/TaskBlock';import Tab from'./components/Tab';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isShown=_useState4[0],setIsShown=_useState4[1];var _useState5=useState('未完成'),_useState6=_slicedToArray(_useState5,2),filteredTitle=_useState6[0],setFilteredTitle=_useState6[1];var captureTasksHandler=function captureTasksHandler(obj){setFilteredTitle(obj.title);};useEffect(function(){var storedTasks=JSON.parse(localStorage.getItem('TASKS'));setTasks(storedTasks);},[]);useEffect(function(){localStorage.setItem('TASKS',JSON.stringify(tasks));},[tasks]);var addTaskHandler=function addTaskHandler(taskObj){setTasks(function(prevTasks){return[taskObj].concat(_toConsumableArray(prevTasks));});setIsShown(false);};var checkboxChangeHandler=function checkboxChangeHandler(updateObj){var clickItemIndex=tasks.findIndex(function(task){return task.id===updateObj.id;});var clickItem=tasks[clickItemIndex];var updatedTask=_objectSpread(_objectSpread({},clickItem),{},{state:updateObj.state});var updatedTasks=_toConsumableArray(tasks);updatedTasks[clickItemIndex]=updatedTask;setTasks(updatedTasks);};var deleteTaskHandler=function deleteTaskHandler(id){var updatedTasks=tasks.filter(function(task){return task.id!==id;});setTasks(updatedTasks);};var deleteDoneTaskHandler=function deleteDoneTaskHandler(){var updatedTasks=tasks.filter(function(task){return task.state===false;});setTasks(updatedTasks);};var showNewTaskHandler=function showNewTaskHandler(event){event.stopPropagation();setIsShown(true);};var closeNewTaskHandler=function closeNewTaskHandler(event){event.stopPropagation();setIsShown(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Tab,{onTab:captureTasksHandler,tasks:tasks}),/*#__PURE__*/_jsx(TaskBlock,{title:filteredTitle,onAdd:addTaskHandler,onDelete:deleteTaskHandler,onToggle:checkboxChangeHandler,onDeleteDone:deleteDoneTaskHandler,tasks:tasks,onShowNew:showNewTaskHandler,onCloseNew:closeNewTaskHandler,isShown:isShown})]});}export default App;","map":{"version":3,"sources":["/Users/mission/Documents/react-practice-to do list/src/App.js"],"names":["useState","useEffect","TaskBlock","Tab","App","tasks","setTasks","isShown","setIsShown","filteredTitle","setFilteredTitle","captureTasksHandler","obj","title","storedTasks","JSON","parse","localStorage","getItem","setItem","stringify","addTaskHandler","taskObj","prevTasks","checkboxChangeHandler","updateObj","clickItemIndex","findIndex","task","id","clickItem","updatedTask","state","updatedTasks","deleteTaskHandler","filter","deleteDoneTaskHandler","showNewTaskHandler","event","stopPropagation","closeNewTaskHandler"],"mappings":"sZAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,kBAAhB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAA0BJ,QAAQ,CAAC,EAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eACA,eAA8BN,QAAQ,CAAC,KAAD,CAAtC,yCAAOO,OAAP,eAAgBC,UAAhB,eAEA,eAA0CR,QAAQ,CAAC,KAAD,CAAlD,yCAAOS,aAAP,eAAsBC,gBAAtB,eACA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,GAAD,CAAS,CACnCF,gBAAgB,CAACE,GAAG,CAACC,KAAL,CAAhB,CACD,CAFD,CAIAZ,SAAS,CAAC,UAAM,CACd,GAAMa,CAAAA,WAAW,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAApB,CACAZ,QAAQ,CAACQ,WAAD,CAAR,CACD,CAHQ,CAGN,EAHM,CAAT,CAKAb,SAAS,CAAC,UAAM,CACdgB,YAAY,CAACE,OAAb,CAAqB,OAArB,CAA8BJ,IAAI,CAACK,SAAL,CAAef,KAAf,CAA9B,EACD,CAFQ,CAEN,CAACA,KAAD,CAFM,CAAT,CAIA,GAAMgB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,OAAD,CAAa,CAClChB,QAAQ,CAAC,SAACiB,SAAD,SAAgBD,OAAhB,4BAA4BC,SAA5B,IAAD,CAAR,CACAf,UAAU,CAAC,KAAD,CAAV,CACD,CAHD,CAIA,GAAMgB,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,SAAD,CAAe,CAC3C,GAAMC,CAAAA,cAAc,CAAGrB,KAAK,CAACsB,SAAN,CAAgB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYJ,SAAS,CAACI,EAAhC,EAAhB,CAAvB,CACA,GAAMC,CAAAA,SAAS,CAAGzB,KAAK,CAACqB,cAAD,CAAvB,CAEA,GAAMK,CAAAA,WAAW,gCAAQD,SAAR,MAAmBE,KAAK,CAAEP,SAAS,CAACO,KAApC,EAAjB,CACA,GAAIC,CAAAA,YAAY,oBAAO5B,KAAP,CAAhB,CACA4B,YAAY,CAACP,cAAD,CAAZ,CAA+BK,WAA/B,CACAzB,QAAQ,CAAC2B,YAAD,CAAR,CACD,CARD,CAUA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACL,EAAD,CAAQ,CAChC,GAAMI,CAAAA,YAAY,CAAG5B,KAAK,CAAC8B,MAAN,CAAa,SAACP,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYA,EAAtB,EAAb,CAArB,CACAvB,QAAQ,CAAC2B,YAAD,CAAR,CACD,CAHD,CAIA,GAAMG,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CAClC,GAAMH,CAAAA,YAAY,CAAG5B,KAAK,CAAC8B,MAAN,CAAa,SAACP,IAAD,QAAUA,CAAAA,IAAI,CAACI,KAAL,GAAe,KAAzB,EAAb,CAArB,CACA1B,QAAQ,CAAC2B,YAAD,CAAR,CACD,CAHD,CAIA,GAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CACpCA,KAAK,CAACC,eAAN,GACA/B,UAAU,CAAC,IAAD,CAAV,CACD,CAHD,CAIA,GAAMgC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACF,KAAD,CAAW,CACrCA,KAAK,CAACC,eAAN,GACA/B,UAAU,CAAC,KAAD,CAAV,CACD,CAHD,CAIA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,GAAD,EACE,KAAK,CAAEG,mBADT,CAEE,KAAK,CAAEN,KAFT,EADF,cAKE,KAAC,SAAD,EACE,KAAK,CAAEI,aADT,CAEE,KAAK,CAAEY,cAFT,CAGE,QAAQ,CAAEa,iBAHZ,CAIE,QAAQ,CAAEV,qBAJZ,CAKE,YAAY,CAAEY,qBALhB,CAME,KAAK,CAAE/B,KANT,CAOE,SAAS,CAAEgC,kBAPb,CAQE,UAAU,CAAEG,mBARd,CASE,OAAO,CAAEjC,OATX,EALF,GADF,CAmBD,CAED,cAAeH,CAAAA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport TaskBlock from './components/Task/TaskBlock';\nimport Tab from './components/Tab';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [isShown, setIsShown] = useState(false);\n\n  const [filteredTitle, setFilteredTitle] = useState('未完成');\n  const captureTasksHandler = (obj) => {\n    setFilteredTitle(obj.title);\n  };\n\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('TASKS'));\n    setTasks(storedTasks);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('TASKS', JSON.stringify(tasks));\n  }, [tasks]);\n\n  const addTaskHandler = (taskObj) => {\n    setTasks((prevTasks) => [taskObj, ...prevTasks]);\n    setIsShown(false);\n  };\n  const checkboxChangeHandler = (updateObj) => {\n    const clickItemIndex = tasks.findIndex((task) => task.id === updateObj.id);\n    const clickItem = tasks[clickItemIndex];\n\n    const updatedTask = { ...clickItem, state: updateObj.state };\n    let updatedTasks = [...tasks];\n    updatedTasks[clickItemIndex] = updatedTask;\n    setTasks(updatedTasks);\n  };\n\n  const deleteTaskHandler = (id) => {\n    const updatedTasks = tasks.filter((task) => task.id !== id);\n    setTasks(updatedTasks);\n  };\n  const deleteDoneTaskHandler = () => {\n    const updatedTasks = tasks.filter((task) => task.state === false);\n    setTasks(updatedTasks);\n  };\n  const showNewTaskHandler = (event) => {\n    event.stopPropagation();\n    setIsShown(true);\n  };\n  const closeNewTaskHandler = (event) => {\n    event.stopPropagation();\n    setIsShown(false);\n  };\n  return (\n    <div className=\"App\">\n      <Tab\n        onTab={captureTasksHandler}\n        tasks={tasks}\n      />\n      <TaskBlock\n        title={filteredTitle}\n        onAdd={addTaskHandler}\n        onDelete={deleteTaskHandler}\n        onToggle={checkboxChangeHandler}\n        onDeleteDone={deleteDoneTaskHandler}\n        tasks={tasks}\n        onShowNew={showNewTaskHandler}\n        onCloseNew={closeNewTaskHandler}\n        isShown={isShown}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}