{"ast":null,"code":"var _jsxFileName = \"/Users/mission/Documents/react-project-practice2/src/component/Task/TaskBlock.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport NewTask from './NewTask';\nimport TaskItem from './TaskItem'; // import TaskContext from '../../store/task-context';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskBlock = props => {\n  _s();\n\n  // const taskCtx = useContext(TaskContext);\n  const [tasks, setTasks] = useState([]);\n\n  const addTaskHandler = taskObj => {\n    setTasks(prevTasks => [taskObj, ...prevTasks]);\n  };\n\n  const checkboxChangeHandler = updateObj => {\n    const clickItemIndex = tasks.findIndex(task => task.id === updateObj.id);\n    let clickItem = tasks[clickItemIndex];\n    clickItem = { ...clickItem,\n      state: updateObj.state\n    };\n    const updatedTasks = [...tasks];\n    updatedTasks[clickItemIndex] = clickItem;\n    setTasks(updatedTasks);\n  };\n\n  let taskList = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u6C92\\u6709\\u63D0\\u9192\\u4E8B\\u9805\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 18\n  }, this);\n\n  if (props.title === '已完成') {\n    const filteredTask = tasks.filter(task => task.state === true);\n    taskList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTask.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        id: task.id,\n        value: task.value,\n        onChangeState: checkboxChangeHandler\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (props.title === '未完成') {\n    const filteredTask = tasks.filter(task => task.state === false);\n    taskList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTask.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        id: task.id,\n        value: task.value\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (props.title === '全部') {\n    taskList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        id: task.id,\n        value: task.value\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTask, {\n      addTask: addTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), taskList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskBlock, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n\n_c = TaskBlock;\nexport default TaskBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBlock\");","map":{"version":3,"sources":["/Users/mission/Documents/react-project-practice2/src/component/Task/TaskBlock.js"],"names":["useState","NewTask","TaskItem","TaskBlock","props","tasks","setTasks","addTaskHandler","taskObj","prevTasks","checkboxChangeHandler","updateObj","clickItemIndex","findIndex","task","id","clickItem","state","updatedTasks","taskList","title","filteredTask","filter","map","value"],"mappings":"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","sourcesContent":["import {useState} from 'react';\nimport NewTask from './NewTask';\nimport TaskItem from './TaskItem';\n// import TaskContext from '../../store/task-context';\n\nconst TaskBlock = (props) => {\n  // const taskCtx = useContext(TaskContext);\n  \n  const [tasks, setTasks] = useState([]);\n  const addTaskHandler=(taskObj)=>{\n    setTasks((prevTasks)=>[taskObj,...prevTasks])\n  };\n  const checkboxChangeHandler = (updateObj)=>{\n    const clickItemIndex = tasks.findIndex(task=> task.id===updateObj.id);\n    let clickItem = tasks[clickItemIndex];\n    clickItem = {...clickItem, state: updateObj.state}\n    const updatedTasks = [...tasks];\n    updatedTasks[clickItemIndex]= clickItem;\n    setTasks(updatedTasks)\n  }\n\n  let taskList = <p>沒有提醒事項</p>;\n\n  if (props.title === '已完成') {\n    const filteredTask = tasks.filter((task) => task.state === true);\n    taskList = (\n      <ul>\n        {filteredTask.map((task) => (\n          <TaskItem id={task.id} key={task.id} value={task.value} onChangeState={checkboxChangeHandler}/>\n        ))}\n      </ul>\n    );\n  }\n  if (props.title === '未完成') {\n    const filteredTask = tasks.filter((task) => task.state === false);\n    taskList = (\n      <ul>\n        {filteredTask.map((task) => (\n          <TaskItem id={task.id} key={task.id} value={task.value} />\n        ))}\n      </ul>\n    );\n  }\n\n  if (props.title === '全部') {\n    taskList = (\n      <ul>\n        {tasks.map((task) => (\n          <TaskItem id={task.id} key={task.id} value={task.value} />\n        ))}\n      </ul>\n    );\n  }\n  return (\n    <div>\n      <h2>{props.title}</h2>\n      <NewTask addTask={addTaskHandler} />\n      {taskList}\n    </div>\n  );\n};\n\nexport default TaskBlock;\n"]},"metadata":{},"sourceType":"module"}