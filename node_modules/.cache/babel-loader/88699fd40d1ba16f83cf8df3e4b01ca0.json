{"ast":null,"code":"var _jsxFileName = \"/Users/mission/Documents/react-practice-to do list/src/component/Task/TaskBlock.js\",\n    _s = $RefreshSig$();\n\nimport classes from './TaskBlock.module.css';\nimport { useEffect, useState } from 'react';\nimport NewTask from './NewTask';\nimport TaskItem from './TaskItem'; // import TaskContext from '../../store/task-context';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst todoListFn = items => {\n  return items.filter(task => task.state === false);\n};\n\nconst doneListFn = items => {\n  return items.filter(task => task.state === true);\n};\n\nconst TaskBlock = props => {\n  _s();\n\n  // const taskCtx = useContext(TaskContext);\n  const [tasks, setTasks] = useState([]);\n  const [isShown, setIsShown] = useState(false); // const filteredDoneTask = tasks.filter((task) => task.state === true);\n  // const filteredTodoTask = tasks.filter((task) => task.state === false);\n\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('TASKS'));\n    setTasks(storedTasks);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('TASKS', JSON.stringify(tasks));\n  }, [tasks]);\n\n  const addTaskHandler = taskObj => {\n    setTasks(prevTasks => [taskObj, ...prevTasks]); // const lastestTasks = [taskObj ,...tasks ]\n\n    setIsShown(false);\n    const tabNumObj = {\n      todoNum: tasks.filter(task => task.state === false).length,\n      doneNum: tasks.filter(task => task.state === true).length,\n      allNum: tasks.length\n    };\n    props.onTaskNum(tabNumObj);\n    console.log(tabNumObj);\n  };\n\n  const checkboxChangeHandler = updateObj => {\n    const clickItemIndex = tasks.findIndex(task => task.id === updateObj.id);\n    const clickItem = tasks[clickItemIndex];\n    const updatedTask = { ...clickItem,\n      state: updateObj.state\n    };\n    let updatedTasks = [...tasks];\n    updatedTasks[clickItemIndex] = updatedTask;\n    setTasks(updatedTasks);\n    const tabNumObj = {\n      todoNum: todoListFn(updatedTasks).length,\n      doneNum: doneListFn(updatedTasks).length,\n      allNum: updatedTasks.length\n    };\n    props.onTaskNum(tabNumObj);\n  };\n\n  const showNewTaskHandler = event => {\n    event.stopPropagation();\n    setIsShown(true);\n  };\n\n  const closeNewTaskHandler = event => {\n    event.stopPropagation();\n    setIsShown(false);\n  };\n\n  const deleteTaskHandler = id => {\n    const updatedTasks = tasks.filter(task => task.id !== id);\n    setTasks(updatedTasks);\n  };\n\n  const deleteDoneTaskHandler = () => {\n    const updatedTasks = tasks.filter(task => task.state === false);\n    setTasks(updatedTasks);\n    const tabNumObj = {\n      todoNum: todoListFn(updatedTasks).length,\n      doneNum: doneListFn(updatedTasks).length,\n      allNum: updatedTasks.length\n    };\n    props.onTaskNum(tabNumObj);\n  };\n\n  let taskList = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u6C92\\u6709\\u63D0\\u9192\\u4E8B\\u9805\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 18\n  }, this);\n\n  let filteredNum = 0;\n  let tabTitleColor = classes.todo;\n\n  if (props.title === '已完成') {\n    filteredNum = filteredDoneTask.length;\n    tabTitleColor = classes.done;\n    taskList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredDoneTask.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        id: task.id,\n        state: task.state,\n        value: task.value,\n        onDelete: deleteTaskHandler,\n        onChangeState: checkboxChangeHandler\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (props.title === '未完成') {\n    filteredNum = filteredTodoTask.length;\n    tabTitleColor = classes.todo;\n    taskList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTodoTask.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        id: task.id,\n        state: task.state,\n        value: task.value,\n        onDelete: deleteTaskHandler,\n        onChangeState: checkboxChangeHandler\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (props.title === '全部') {\n    filteredNum = tasks.length;\n    tabTitleColor = classes.all;\n    taskList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        id: task.id,\n        value: task.value,\n        state: task.state,\n        onDelete: deleteTaskHandler,\n        onChangeState: checkboxChangeHandler\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes['tab-block'],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.backdrop,\n      onClick: closeNewTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes['tab-title']} ${tabTitleColor}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: filteredNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), taskList, isShown && /*#__PURE__*/_jsxDEV(NewTask, {\n      addTask: addTaskHandler,\n      onCloseNew: closeNewTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['clean-done'],\n        onClick: deleteDoneTaskHandler,\n        children: \"\\u6E05\\u9664\\u5DF2\\u5B8C\\u6210\\u9805\\u76EE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['button-add'],\n        onClick: showNewTaskHandler,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskBlock, \"+7vTbUOAdDOhjdytMVQjLCdxPuY=\");\n\n_c = TaskBlock;\nexport default TaskBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBlock\");","map":{"version":3,"sources":["/Users/mission/Documents/react-practice-to do list/src/component/Task/TaskBlock.js"],"names":["classes","useEffect","useState","NewTask","TaskItem","todoListFn","items","filter","task","state","doneListFn","TaskBlock","props","tasks","setTasks","isShown","setIsShown","storedTasks","JSON","parse","localStorage","getItem","setItem","stringify","addTaskHandler","taskObj","prevTasks","tabNumObj","todoNum","length","doneNum","allNum","onTaskNum","console","log","checkboxChangeHandler","updateObj","clickItemIndex","findIndex","id","clickItem","updatedTask","updatedTasks","showNewTaskHandler","event","stopPropagation","closeNewTaskHandler","deleteTaskHandler","deleteDoneTaskHandler","taskList","filteredNum","tabTitleColor","todo","title","filteredDoneTask","done","map","value","filteredTodoTask","all","backdrop","actions"],"mappings":"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","sourcesContent":["import classes from './TaskBlock.module.css';\nimport { useEffect, useState } from 'react';\nimport NewTask from './NewTask';\nimport TaskItem from './TaskItem';\n// import TaskContext from '../../store/task-context';\n\nconst todoListFn = (items)=>{return items.filter((task) => task.state === false)}\nconst doneListFn = (items)=>{return items.filter((task) => task.state === true)}\nconst TaskBlock = (props) => {\n  // const taskCtx = useContext(TaskContext);\n\n  const [tasks, setTasks] = useState([]);\n  const [isShown, setIsShown] = useState(false);\n  // const filteredDoneTask = tasks.filter((task) => task.state === true);\n  // const filteredTodoTask = tasks.filter((task) => task.state === false);\n  \n  useEffect(()=>{\n    const storedTasks = JSON.parse(localStorage.getItem('TASKS'));\n    setTasks(storedTasks)\n  },[])\n\n  useEffect(()=>{\n    localStorage.setItem('TASKS',JSON.stringify(tasks))\n  },[tasks])\n\n  const addTaskHandler = (taskObj) => {\n      setTasks((prevTasks) => [taskObj, ...prevTasks]);\n      // const lastestTasks = [taskObj ,...tasks ]\n      setIsShown(false);\n      const tabNumObj = {\n        todoNum:  tasks.filter((task) => task.state === false).length,\n        doneNum:  tasks.filter((task) => task.state === true).length,\n        allNum: tasks.length,\n      };\n      props.onTaskNum(tabNumObj);\n      console.log(tabNumObj)\n  };\n  const checkboxChangeHandler = (updateObj) => {\n    const clickItemIndex = tasks.findIndex((task) => task.id === updateObj.id);\n    const clickItem = tasks[clickItemIndex];\n\n    const updatedTask = { ...clickItem, state: updateObj.state };\n    let updatedTasks = [...tasks];\n    updatedTasks[clickItemIndex] = updatedTask;\n    setTasks(updatedTasks);\n\n    const tabNumObj = {\n      todoNum: todoListFn(updatedTasks).length,\n      doneNum: doneListFn(updatedTasks).length,\n      allNum: updatedTasks.length,\n    };\n    props.onTaskNum(tabNumObj);\n  };\n\n  const showNewTaskHandler = (event) => {\n    event.stopPropagation();\n    setIsShown(true);\n  };\n  const closeNewTaskHandler = (event) => {\n    event.stopPropagation();\n    setIsShown(false);\n  };\n  const deleteTaskHandler = (id) => {\n    const updatedTasks = tasks.filter((task) => task.id !== id);\n    setTasks(updatedTasks);\n  };\n  const deleteDoneTaskHandler = () => {\n    const updatedTasks = tasks.filter((task) => task.state === false);\n    setTasks(updatedTasks);\n\n    const tabNumObj = {\n      todoNum: todoListFn(updatedTasks).length,\n      doneNum: doneListFn(updatedTasks).length,\n      allNum: updatedTasks.length,\n    };\n    props.onTaskNum(tabNumObj);\n  };\n  let taskList = <p>沒有提醒事項</p>;\n  let filteredNum = 0;\n  let tabTitleColor = classes.todo;\n\n  if (props.title === '已完成') {\n    filteredNum = filteredDoneTask.length;\n    tabTitleColor = classes.done;\n    taskList = (\n      <ul>\n        {filteredDoneTask.map((task) => (\n          <TaskItem\n            id={task.id}\n            key={task.id}\n            state={task.state}\n            value={task.value}\n            onDelete={deleteTaskHandler}\n            onChangeState={checkboxChangeHandler}\n          />\n        ))}\n      </ul>\n    );\n  }\n  if (props.title === '未完成') {\n    filteredNum = filteredTodoTask.length;\n    tabTitleColor = classes.todo;\n    taskList = (\n      <ul>\n        {filteredTodoTask.map((task) => (\n          <TaskItem\n            id={task.id}\n            key={task.id}\n            state={task.state}\n            value={task.value}\n            onDelete={deleteTaskHandler}\n            onChangeState={checkboxChangeHandler}\n          />\n        ))}\n      </ul>\n    );\n  }\n\n  if (props.title === '全部') {\n    filteredNum = tasks.length;\n    tabTitleColor = classes.all;\n    taskList = (\n      <ul>\n        {tasks.map((task) => (\n          <TaskItem\n            id={task.id}\n            key={task.id}\n            value={task.value}\n            state={task.state}\n            onDelete={deleteTaskHandler}\n            onChangeState={checkboxChangeHandler}\n          />\n        ))}\n      </ul>\n    );\n  }\n  return (\n    <div className={classes['tab-block']}>\n      <div className={classes.backdrop} onClick={closeNewTaskHandler}></div>\n      <div className={`${classes['tab-title']} ${tabTitleColor}`}>\n        <h2>{props.title}</h2>\n        <h2>{filteredNum}</h2>\n      </div>\n      {taskList}\n      {isShown && (\n        <NewTask addTask={addTaskHandler} onCloseNew={closeNewTaskHandler} />\n      )}\n      <div className={classes.actions}>\n        <button\n          className={classes['clean-done']}\n          onClick={deleteDoneTaskHandler}\n        >\n          清除已完成項目\n        </button>\n        <button className={classes['button-add']} onClick={showNewTaskHandler}>\n          +\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskBlock;\n"]},"metadata":{},"sourceType":"module"}